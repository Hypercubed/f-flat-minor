version = 0.1
default-task = 'build'

extensions = ['../cmp-extension.js']

[[task]]
name = 'build'
deps = ['build:src/mp']

[[task]]
name = 'build:#'
targets = ['./build/#.wasm', './build/#.wat']
deps = ['##.ts', './src/*.ts']
run = '''
  rm -f ./build/$MATCH.wasm
  asc $DEP --target debug --outFile ./build/$MATCH.wasm --textFile ./build/$MATCH.wat
'''

[[task]]
name = 'build-release:#'
targets = ['./build/#-release.wasm', './build/#-release.wat']
deps = ['##.ts', './src/*.ts']
run = '''
  rm -f ./build/$MATCH-release.wasm
  asc $DEP --target release --outFile ./build/$MATCH-release.wasm --textFile ./build/$MATCH-release.wat
'''

[[task]]
name = 'run:#'
deps = ['##.ts']
run = '''
  chomp build:$MATCH
  wasmtime ./build/$MATCH.wasm
'''

[[task]]
name = 'run-release:#'
deps = ['##.ts']
run = '''
  chomp build-release:$MATCH
  wasmtime ./build/$MATCH-release.wasm
'''

[[task]]
name = 'example'
deps = [':run:src/example-interp']

[[task]]
name = 'test'
serial = true
deps = [':build:./src/test-exports', './tests/*.js', ':tap', ':bats', ':interpret']

[[task]]
name = 'tap'
deps = [':build:./src/test-exports', ':build:./src/plugin', './tests/*.js']
run = '''
  tap --node-arg="--no-warnings" --allow-empty-coverage run ./tests/*.js
'''

[[task]]
name = 'bats'
deps = [':build:./src/test-exports', './bats/*.bats']
run = '''
  bats ./bats/tests.bats
'''

[[task]]
name = 'bench:#'
deps = ['##.ts']
run = '''
  chomp build-release:$MATCH
  hyperfine --warmup 10 'wasmtime ./build/$MATCH-release.wasm'
'''

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''

[[task]]
name = 'interpret'
deps = [':build:./src/plugin']
run = 'cat ../ff/example.ff | node --no-warnings ./run.js'
template = 'cmp'
[task.template-options]
cmp = '../ff/example.out'

[[task]]
name = 'repl'
deps = [':run-release:src/repl']

[[task]]
name = 'wasmer-repl'
deps = [':build-release:src/repl']
run = '''
  wasmer .
'''

[[task]]
name = 'build-cli'
deps = [':build-release:./src/repl']
run = '''
sh ./hermit.com -f Hermitfile -o ./build/cli.com
chmod +x ./build/cli.com
'''

# [[task]]
# name = 'pp:#'
# deps = ['##', ':build-cli']
# serial = true
# invalidation = 'always'
# validation = 'none'
# run = '''
#   ../deno/bin/ff compile $MATCH --opt --disassemble | ./build/cli.com --silent
# '''

[[task]]
name = 'pp:#'
deps = ['##', ':build:src/plugin']
serial = true
invalidation = 'always'
validation = 'none'
run = '''
  ../deno/bin/ff compile $MATCH --opt --disassemble | ./run.js
'''