.load ./ff/core.ff

/* math */
1 2 + 3 = assert
3 4 - -1 = assert
5 6 * 30 = assert
8 4 / 2 = assert
8 5 % 3 = assert
9 12 ^ 282429536481 = assert


/* derived math */
12 ! 479001600 = assert
5 sqr 25 = assert

0 sgn 0 = assert
5 sgn 1 = assert
-5 sgn -1 = assert

0 abs 0 = assert
5 abs 5 = assert
-5 abs 5 = assert

/* bitwise */

5 3 & 1 = assert
5 3 | 7 = assert
5 ~ -6 = assert

/* logical */

true true and assert
true false and not assert
false true and not assert
false false and not assert

true true or assert
true false or assert
false true or assert
false false or not assert

/* comparison */

1 2 < assert
4 3 < not assert
5 6 > not assert
8 7 > assert
9 10 = not assert
11 11 = assert

/* string */

'A' 65 = assert
/* '\s' 32 = assert
'\n' 10 = assert */

/* control */

5 true [ 3 + ] ? 8 = assert
5 false [ 3 + ] ? 5 = assert

true 5 8 choose 5 = assert
false 5 8 choose 8 = assert

5 true [ 3 + ] [ 3 - ] branch 8 = assert
5 false [ 3 + ] [ 3 - ] branch 2 = assert

/* shuffing */

3 dup 3 = assert 3 = assert
3 5 dup2 5 = assert 3 = assert 5 = assert 3 = assert

1 2 3 bury 2 = assert 1 = assert 3 = assert
1 2 3 rot 1 = assert 2 = assert 3 = assert
