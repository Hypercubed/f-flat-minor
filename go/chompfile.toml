version = 0.1
default-task = 'build'

[env]
RED = '\033[0;31m'
NC = '\033[0m'
GRN = '\033[0;32m'
BLUE = '\033[0;34m'
CHECK = 'printf "  ${GRN}OK${NC} " || printf "  ${RED}FAIL${NC} "'

[[task]]
target = './build/##'
deps = [
    './cmd/##',
    './cmd/**/*.go',
    './src/**/*.go',
]
run = '''
  go build -o $TARGET $DEP
'''

[[task]]
name = 'build'
deps = [
    './build/compile',
    './build/execute',
    './build/run',
    './build/repl',
]

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''

[[task]]
name = 'compile'
dep = './build/compile'
run = '''
	./build/compile --in ../ff/example.ff | cmp --s - "../ff/example.ffb"
'''

[[task]]
name = 'execute'
dep = './build/execute'
run = '''
	cat ../ff/example.ffb | ./build/execute | cmp --s - "../ff/example.out"
'''

[[task]]
name = 'interpret'
dep = './build/run'
run = '''
	./build/run --in ../ff/example.ff | cmp --s - "../ff/example.out"
'''

[[task]]
name = 'test'
deps = [
    'build',
    ':compile',
    ':execute',
    ':interpret',
    ':ff',
]
serial = true
display = 'none'

[[task]]
name = 'ff'
deps = [
    '../ff/##.out',
    './build/run',
]
serial = true
invalidation = 'always'
validation = 'none'
display = 'status-only'
run = '''
  shopt -s nullglob
  shopt -s extglob
  for i in "${DEP%.*}.ff?(p)"; do
    ./build/run --in $i | cmp - $DEP -s && ${{CHECK}};
  done
'''

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''
