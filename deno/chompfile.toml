version = 0.1
default-task = 'build'

extensions = ['../cmp-extension.js']

[env]
RED = '\033[0;31m'
CHECK = 'printf "  ${GRN}OK${NC} " || printf "  ${RED}FAIL${NC} "'
BLUE = '\033[0;34m'
NC = '\033[0m'
GRN = '\033[0;32m'

[[task]]
name = 'build:##'
target = './build/##'
deps = [
  './bin/ff-##.ts',
  './src/**/*.ts',
]
run = '''
  deno compile --unstable --allow-env --allow-read -o $TARGET $DEP
'''

[[task]]
name = 'build'
deps = [
    './build/compile',
    './build/run',
    './build/execute',
    './build/preprocess',
]

[[task]]
name = 'compile'
deps = ['./build/compile']
template = 'cmp'
run = './build/compile ../ff/example.ff'
[task.template-options]
cmp = '../ff/example.ffb'

[[task]]
name = 'execute'
dep = './build/execute'
template = 'cmp'
invalidation = 'always'
run = './build/execute ../ff/example.ffb'
[task.template-options]
cmp = '../ff/example.out'

[[task]]
name = 'interpret'
dep = './build/run'
run = './build/run ../ff/example.ff'
template = 'cmp'
[task.template-options]
cmp = '../ff/example.out'

[[task]]
name = 'test'
deps = [
    'build',
    ':compile',
    ':execute',
    ':interpret',
    ':ff'
]
serial = true
display = 'none'

[[task]]
name = 'ff'
deps = [
    '../ff/##.out',
    './build/run',
]
target = '../ff/##'
serial = true
invalidation = 'always'
validation = 'none'
display = 'status-only'
run = '''
  shopt -s nullglob
  shopt -s extglob
  for i in "${TARGET}.ff?(p)"; do
    ./build/run $i | cmp - $DEP -s && ${{CHECK}};
    ./build/run $i --opt | cmp - $DEP -s && ${{CHECK}};
  done
'''

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''
