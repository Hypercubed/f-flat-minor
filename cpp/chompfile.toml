version = 0.1
default-task = 'build'

extensions = ['../cmp-extension.js']

[env]
NC = '\033[0m'
BLUE = '\033[0;34m'
CHECK = 'printf "  ${GRN}OK${NC} " || printf "  ${RED}FAIL${NC} "'
RED = '\033[0;31m'
GRN = '\033[0;32m'

[[task]]
target = './build/#'
deps = ['./#.cpp']
run = '''
  g++ $DEP -std=c++11 -o $TARGET -O2 -lgmp
'''

[[task]]
name = 'build'
deps = ['./build/run']

[[task]]
name = 'interpret'
dep = './build/run'
run = 'cat ../ff/example_v0.ff | ./build/run'
template = 'cmp'
[task.template-options]
cmp = '../ff/example_v0.out'

[[task]]
name = 'test'
deps = [
    ':build',
    ':interpret',
    ':ff',
]
serial = true
display = 'none'

[[task]]
display = 'none'
name = 'build-deno-compiler'
run = 'chomp -c ../deno/ :preprocess'

[[task]]
name = 'ff'
deps = [
  '../build/preprocess/##.ff',
  'build-deno-compiler',
  './build/run',
]
target = '../ff/##.out'
serial = true
invalidation = 'always'
validation = 'none'
display = 'status-only'
run = '''
  cat $DEP | ./build/run
'''
template = 'cmp'
[task.template-options]
cmp = '$TARGET'

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''
