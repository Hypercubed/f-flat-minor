version = 0.1
default-task = 'build'

extensions = ['../cmp-extension.js']

[env]
BLUE = '\033[0;34m'
NC = '\033[0m'
BIN = './bin/dart.exe'
PP = '../deno/build/compile --opt --disassemble'
CHECK = 'printf "  ${GRN}OK${NC} " || printf "  ${RED}FAIL${NC} "'
RED = '\033[0;31m'
GRN = '\033[0;32m'

[[task]]
target = './bin/#.exe'
deps = ['./bin/#.dart']
run = '''
  dart compile exe $DEP
'''

[[task]]
name = 'build'
deps = ['./bin/dart.exe']

[[task]]
name = 'interpret'
dep = './bin/dart.exe'
run = 'cat ../ff/example_v0.ff | ./bin/dart.exe'
template = 'cmp'
[task.template-options]
cmp = '../ff/example_v0.out'

[[task]]
name = 'build-deno-compiler'
run = 'chomp -c ../deno/ :build:compile'

[[task]]
name = 'test'
deps = [
    ':build',
    ':interpret',
]
serial = true
display = 'none'

[[task]]
name = 'ff'
deps = [
    '../ff/##.out',
    './bin/dart.exe',
    'build-deno-compiler',
]
serial = true
invalidation = 'always'
validation = 'none'
display = 'status-only'
run = '''
  shopt -s nullglob
  shopt -s extglob
  for i in "${DEP%.*}.ff?(p)"; do
    echo $i
    ../deno/build/compile $i --opt --disassemble | ${{BIN}} | cmp - $DEP -s && ${{CHECK}};
  done
'''

[[task]]
name = 'clean'
run = '''
  rm -./bin/dart.exe
'''
