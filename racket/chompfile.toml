version = 0.1
default-task = 'build'

extensions = ['../cmp-extension.js']

[env]
NC = '\033[0m'
BLUE = '\033[0;34m'
CHECK = 'printf "  ${GRN}OK${NC} " || printf "  ${RED}FAIL${NC} "'
RED = '\033[0;31m'
GRN = '\033[0;32m'

[[task]]
name = 'exe:#'
target = './build/#'
deps = ['./#.rkt', './**/*.rkt']
run = '''
  raco exe -o $TARGET $DEP
'''

[[task]]
name = 'build'
deps = [':exe:example', ':make:main']

[[task]]
name = 'make:#'
target = './compiled/#_rkt.dep'
deps = ['./#.rkt', './**/*.rkt']
run = '''
  raco make $DEP
'''

[[task]]
name = 'clean'
run = '''
  rm -rf ./build ./compiled ./**/compiled
'''

[[task]]
name = 'test:interpret'
dep = 'make:main'
run = '''
  ./main.rkt ../ff/example.ff
'''
template = 'cmp'
[task.template-options]
cmp = '../ff/example.out'

[[task]]
name = 'test:compile'
dep = 'make:main'
run = '''
	./main.rkt --compile ../ff/example.ff
'''
template = 'cmp'
[task.template-options]
cmp = '../ff/example.ffb'

[[task]]
name = 'test:execute'
dep = 'make:main'
run = '''
	./main.rkt ../ff/example.ffb
'''
template = 'cmp'
[task.template-options]
cmp = '../ff/example.out'

[[task]]
name = 'test'
deps = ['test:compile', 'test:execute', 'test:interpret', 'test:ff']
serial = true
display = 'none'

[[task]]
name = 'test:ff'
deps = [
  '../ff/##.out',
  'make:main'
]
target = '../ff/##'
serial = true
invalidation = 'always'
validation = 'none'
display = 'status-only'
run = '''
  shopt -s nullglob
  shopt -s extglob
  for i in "${TARGET}.ff?(p)"; do
    racket main.rkt $i | cmp - $DEP -s && ${{CHECK}};
  done
'''

[[task]]
name = 'clean'
run = '''
  rm -rf ./build
'''

[[task]]
name = 'bench'
deps = ['build', ':exe:fact']
validation = 'none'
serial = true
run = '''
  hyperfine --warmup 3 -N\
    './build/fact' \
    'racket main.rkt ../ff/example.ffb'\
    './build/example'\
    'racket ./example.rkt'\
    'racket main.rkt ../ff/example.ff'\
    'racket main.rkt --pp ../ff/example.ff'
'''
